
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Adarsh Maurya
 */
public class Transaction_report extends javax.swing.JFrame {

    /**
     * Creates new form Transaction_report
     */
      DefaultTableModel model;
     establishconnection ob=new establishconnection();
     int editmode=0;
    public Transaction_report() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btng_owner = new javax.swing.JButton();
        btng_script = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtS_owner = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtS_script = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnshow = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1500, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        btng_owner.setText("Group by Owner_Name");
        btng_owner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btng_ownerActionPerformed(evt);
            }
        });
        getContentPane().add(btng_owner);
        btng_owner.setBounds(310, 670, 210, 50);

        btng_script.setText("Group by Script_Name");
        btng_script.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btng_scriptActionPerformed(evt);
            }
        });
        getContentPane().add(btng_script);
        btng_script.setBounds(540, 670, 200, 50);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction_ID", "Owner_Name", "Script_Name", "Quantity", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(90, 40, 1320, 585);
        getContentPane().add(txtS_owner);
        txtS_owner.setBounds(790, 670, 151, 42);

        jLabel12.setText("By Owner_name");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(790, 630, 151, 41);
        getContentPane().add(txtS_script);
        txtS_script.setBounds(1000, 670, 138, 42);

        jLabel13.setText("By Script_name");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(1000, 630, 138, 41);

        btnshow.setText("Show");
        btnshow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowActionPerformed(evt);
            }
        });
        getContentPane().add(btnshow);
        btnshow.setBounds(1180, 670, 116, 42);

        jButton1.setText("Show all");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(110, 670, 190, 50);

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        getContentPane().add(btnback);
        btnback.setBounds(10, 30, 59, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnshowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowActionPerformed
        // TODO add your handling code here:
        String str1=txtS_owner.getText();
        String str2=txtS_script.getText();
        if(str1.length()==0&&str2.length()==0){
            JOptionPane.showMessageDialog(this, "Please provide owner name or script name or both");
        }
        else{
            String code="Select * from transaction";
            if(str1.length()!=0&&str2.length()==0){
                code="select Transaction_ID,Owner_Name,Script_Name,Quantity,(quantity*rate+brokerage+expenses) as value from transaction where Owner_Name='"+str1+"';";
            }
            else if(str1.length()==0&&str2.length()!=0){
                code="select Transaction_ID,Owner_Name,Script_Name,Quantity,(quantity*rate+brokerage+expenses) as value from transaction where Script_Name='"+str2+"';";
            }
            else{
                code="select Transaction_ID,Owner_Name,Script_Name,Quantity,(quantity*rate+brokerage+expenses) as value from transaction where Owner_Name='"+str1+"' AND Script_Name='"+str2+"';";
            }

            ob.execute(code);
            model =(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
           String[] s=new String[5];
            try{
                while(ob.rs.next()){
                    s[0]=ob.rs.getString(1);
                    s[1]=ob.rs.getString(2);
                    s[2]=ob.rs.getString(3);
                    s[3]=ob.rs.getString(4);
                    s[4]=ob.rs.getString(5);
                    model.addRow(s);
                }
           }
           catch(Exception e){
               System.out.println("error in getting data");
           }

        }
    }//GEN-LAST:event_btnshowActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        String code="select Transaction_ID,Owner_Name,Script_Name,Quantity,(quantity*rate+brokerage+expenses) as value from transaction;";
           ob.execute(code);
          model =(DefaultTableModel)jTable1.getModel();
          model.setRowCount(0);
           String[] s=new String[5];
            try{
                while(ob.rs.next()){
                    s[0]=ob.rs.getString(1);
                    s[1]=ob.rs.getString(2);
                    s[2]=ob.rs.getString(3);
                    s[3]=ob.rs.getString(4);
                    s[4]=ob.rs.getString(5);
                    model.addRow(s);
                }
           }
           catch(Exception e){
               System.out.println("error in getting data");
           }
    }//GEN-LAST:event_formWindowActivated

    private void btng_ownerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btng_ownerActionPerformed
        // TODO add your handling code here:
         String code="select Owner_Name,sum(Quantity) as qty,sum(quantity*rate+brokerage+expenses) as value from transaction group by Owner_Name;";
           ob.execute(code);
          model =(DefaultTableModel)jTable1.getModel();
          model.setRowCount(0);
           String[] s=new String[5];
            try{
                while(ob.rs.next()){
                    s[0]="";
                    s[1]=ob.rs.getString(1);
                    s[2]="";
                    s[3]=ob.rs.getString(2);
                    s[4]=ob.rs.getString(3);
                    model.addRow(s);
                }
           }
           catch(Exception e){
               System.out.println("error in getting data");
           }
    }//GEN-LAST:event_btng_ownerActionPerformed

    private void btng_scriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btng_scriptActionPerformed
        String code="select Script_Name,sum(Quantity) as qty,sum(quantity*rate+brokerage+expenses) as value from transaction group by Script_Name;";
           ob.execute(code);
          model =(DefaultTableModel)jTable1.getModel();
          model.setRowCount(0);
           String[] s=new String[5];
            try{
                while(ob.rs.next()){
                    s[0]="";
                    s[1]="";
                    s[2]=ob.rs.getString(1);
                    s[3]=ob.rs.getString(2);
                    s[4]=ob.rs.getString(3);
                    model.addRow(s);
                }
           }
           catch(Exception e){
               System.out.println("error in getting data");
           }
    }//GEN-LAST:event_btng_scriptActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String code="select Transaction_ID,Owner_Name,Script_Name,Quantity,(quantity*rate+brokerage+expenses) as value from transaction;";
           ob.execute(code);
          model =(DefaultTableModel)jTable1.getModel();
          model.setRowCount(0);
           String[] s=new String[5];
            try{
                while(ob.rs.next()){
                    s[0]=ob.rs.getString(1);
                    s[1]=ob.rs.getString(2);
                    s[2]=ob.rs.getString(3);
                    s[3]=ob.rs.getString(4);
                    s[4]=ob.rs.getString(5);
                    model.addRow(s);
                }
           }
           catch(Exception e){
               System.out.println("error in getting data");
           }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        new Browse().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaction_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaction_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaction_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaction_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaction_report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btng_owner;
    private javax.swing.JButton btng_script;
    private javax.swing.JButton btnshow;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtS_owner;
    private javax.swing.JTextField txtS_script;
    // End of variables declaration//GEN-END:variables
}
